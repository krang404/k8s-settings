apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  labels:
    app: rabbitmq
  name: rabbitmq
  namespace: exchange-listener
spec:
  affinity:
     nodeAffinity:
       requiredDuringSchedulingIgnoredDuringExecution:
         nodeSelectorTerms:
         - matchExpressions:
           - key: kubernetes.io/hostname
             operator: In
             values:
             - k8sm00
             - k8sm01
             - k8sm02
             - k8sw00
  tolerations:
    - operator: Exists
  replicas: 3
  image: rabbitmq:3.11.6
  service:
    type: ClusterIP
  persistence:
    storageClassName: fast-disks
    storage: 9978Mi
  resources:
    requests:
      cpu: 256m
      memory: 2Gi
    limits:
      cpu: 500m
      memory: 4Gi
  rabbitmq:
    additionalPlugins:
      - rabbitmq_management
      - rabbitmq_peer_discovery_k8s
    additionalConfig: |
      cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s
      cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
      cluster_formation.k8s.address_type = hostname
      cluster_formation.k8s.port = 443
      ### cluster_formation.k8s.address_type = ip
      cluster_formation.node_cleanup.interval = 10
      cluster_formation.node_cleanup.only_log_warning = true
      cluster_partition_handling = autoheal
      queue_master_locator=min-masters
      cluster_formation.k8s.service_name = rabbitmq-pods
      cluster_formation.k8s.hostname_suffix = .rabbitmq-pods.exchange-listener.svc.cluster.local
      loopback_users.guest = false
      default_user = guest
      default_pass = guest
    advancedConfig: ""
