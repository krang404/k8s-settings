---
# Source: local-volume-static-provisioner/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: local-storage-admin
  namespace: kube-system
  labels:
    helm.sh/chart: local-volume-static-provisioner-1.0.0
    app.kubernetes.io/name: local-volume-static-provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: localpv
---
# Source: local-volume-static-provisioner/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: localpv-local-volume-static-provisioner-config
  namespace: kube-system
  labels:
    helm.sh/chart: local-volume-static-provisioner-1.0.0
    app.kubernetes.io/name: local-volume-static-provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: localpv
data:
  labelsForPV: |
    pv-labels : can-be-selected
  storageClassMap: |
    fast-disks:
      hostDir: /mnt/disks/fast-disks
      mountDir: /mnt/disks/fast-disks
      blockCleanerCommand:
        - "/scripts/shred.sh"
        - "2"
      volumeMode: Filesystem
      fsType: ext4
      namePattern: "*"
    redis-disks:
      hostDir: /mnt/disks/redis-disks
      mountDir: /mnt/disks/redis-disks
      blockCleanerCommand:
        - "/scripts/shred.sh"
        - "2"
      volumeMode: Filesystem
      fsType: ext4
      namePattern: "*"
    elastik-disks:
      hostDir: /mnt/disks/elastik-disks
      mountDir: /mnt/disks/elastik-disks
      blockCleanerCommand:
        - "/scripts/shred.sh"
        - "2"
      volumeMode: Filesystem
      fsType: ext4
      namePattern: "*"
---
# Source: local-volume-static-provisioner/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast-disks
  labels:
    helm.sh/chart: local-volume-static-provisioner-1.0.0
    app.kubernetes.io/name: local-volume-static-provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: localpv
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
---
# Source: local-volume-static-provisioner/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: redis-disks
  labels:
    helm.sh/chart: local-volume-static-provisioner-1.0.0
    app.kubernetes.io/name: local-volume-static-provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: localpv
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
---
# Source: local-volume-static-provisioner/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: elastik-disks
  labels:
    helm.sh/chart: local-volume-static-provisioner-1.0.0
    app.kubernetes.io/name: local-volume-static-provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: localpv
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
---
# Source: local-volume-static-provisioner/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: localpv-local-volume-static-provisioner-node-clusterrole
  labels:
    helm.sh/chart: local-volume-static-provisioner-1.0.0
    app.kubernetes.io/name: local-volume-static-provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: localpv
rules:
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["watch"]
- apiGroups: ["", "events.k8s.io"]
  resources: ["events"]
  verbs: ["create", "update", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get"]
---
# Source: local-volume-static-provisioner/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: localpv-local-volume-static-provisioner-node-binding
  labels:
    helm.sh/chart: local-volume-static-provisioner-1.0.0
    app.kubernetes.io/name: local-volume-static-provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: localpv
subjects:
- kind: ServiceAccount
  name: local-storage-admin
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: localpv-local-volume-static-provisioner-node-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: local-volume-static-provisioner/templates/daemonset_linux.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: localpv-local-volume-static-provisioner
  namespace: kube-system
  labels:
    helm.sh/chart: local-volume-static-provisioner-1.0.0
    app.kubernetes.io/name: local-volume-static-provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: localpv
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: local-volume-static-provisioner
      app.kubernetes.io/instance: localpv
  template:
    metadata:
      labels:
        app.kubernetes.io/name: local-volume-static-provisioner
        app.kubernetes.io/instance: localpv
      annotations:
        checksum/config: 706e72e138eb8b5dd85fbdbbfdd3628f645a1f4731a98fb40e6de00ba079d988
    spec:
      serviceAccountName: local-storage-admin
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:    
        - operator: Exists
      containers:
        - name: provisioner
          image: k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0
          imagePullPolicy: Always
          securityContext:
            privileged: true
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JOB_CONTAINER_IMAGE
            value: k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0
          ports:
          - name: metrics
            containerPort: 8080
          volumeMounts:
            - name: provisioner-config
              mountPath: /etc/provisioner/config
              readOnly: true
            - name: provisioner-dev
              mountPath: /dev
            - name: fast-disks
              mountPath: /mnt/disks/fast-disks
              mountPropagation: HostToContainer
            - name: redis-disks
              mountPath: /mnt/disks/redis-disks
              mountPropagation: HostToContainer
            - name: elastik-disks
              mountPath: /mnt/disks/elastik-disks
              mountPropagation: HostToContainer
      volumes:
        - name: provisioner-config
          configMap:
            name: localpv-local-volume-static-provisioner-config
        - name: provisioner-dev
          hostPath:
            path: /dev
        - name: fast-disks
          hostPath:
            path: /mnt/disks/fast-disks
        - name: redis-disks
          hostPath:
            path: /mnt/disks/redis-disks
        - name: elastik-disks
          hostPath:
            path: /mnt/disks/elastik-disks
